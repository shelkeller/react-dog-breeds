{"code":"(this[\"webpackJsonpreact-dog-breeds\"]=this[\"webpackJsonpreact-dog-breeds\"]||[]).push([[0],{20:function(e,t,s){},39:function(e,t,s){\"use strict\";s.r(t);var a=s(0),r=s(2),c=s(13),n=s.n(c),i=s(14);s(20);var d=e=>{let t=e.puppy,s={backgroundImage:\"url(\"+t.image+\")\",backgroundSize:\"cover\",position:\"relative\"};return Object(a.jsx)(\"div\",{className:\"grid-entry\",style:s,children:Object(a.jsxs)(\"span\",{style:{backgroundColor:\"white\",padding:\"3px\",position:\"absolute\",top:\"10px\",left:\"10px\",borderRadius:\"2px\"},children:[t.firstName,\" \",t.lastName]})})};var p=e=>{let t=e.puppies;return Object(a.jsx)(\"div\",{className:\"grid\",children:t.map((e=>Object(a.jsx)(d,{puppy:e})))})},l=s(3),o=s.n(l);const b=(e,t)=>{let s=e;t&&(s+=\"/\"+t);let a=\"https://dog.ceo/api/breed/\"+s+\"/images/random\";return o.a.get(a)};function g(){let e=Object(r.useState)([]),t=Object(i.a)(e,2),s=t[0],c=t[1];return Object(r.useEffect)((()=>{o.a.get(\"https://dog.ceo/api/breeds/list/all\").then((e=>{let t=[],s=Object.entries(e.data.message).length;Object.entries(e.data.message).forEach(((e,a)=>{0===e[1].length&&b(e[0]).then((r=>{t.push({firstName:\"\",lastName:e[0],image:r.data.message}),a===s-1&&c(t)})),e[1].length>0&&e[1].forEach(((r,n)=>{b(e[0],r).then((i=>{t.push({firstName:r,lastName:e[0],image:i.data.message}),a===s-1&&n===e[1].length-1&&c(t)}))}))}))}))}),[]),Object(a.jsx)(\"main\",{children:Object(a.jsxs)(\"header\",{children:[Object(a.jsx)(\"h1\",{children:\"It's Puppy Time\"}),Object(a.jsx)(p,{puppies:s})]})})}const h=document.getElementById(\"root\");n.a.render(Object(a.jsx)(r.StrictMode,{children:Object(a.jsx)(g,{})}),h)}},[[39,1,2]]]);","name":"static/js/main.dad21925.chunk.js","map":{"version":3,"sources":["static/js/main.dad21925.chunk.js"],"names":["this","push","20","module","exports","__webpack_require__","39","__webpack_exports__","r","jsx_runtime","react","react_dom","react_dom_default","n","slicedToArray","components_GridEntry","props","puppy","backgroundStyle","backgroundImage","image","backgroundSize","position","Object","className","style","children","backgroundColor","padding","top","left","borderRadius","firstName","lastName","components_PuppyGrid","puppies","map","axios","axios_default","apiGetRandomImage","breed","subBreed","innerPart","url","a","get","App","_useState","_useState2","setPuppies","then","rsp","pushPuppies","length","entries","data","message","forEach","entry","index","imageRsp","subPup","subIndex","rootElement","document","getElementById","render"],"mappings":"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"},"input":"(this[\"webpackJsonpreact-dog-breeds\"] = this[\"webpackJsonpreact-dog-breeds\"] || []).push([[0],{\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(13);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./src/styles.css\nvar styles = __webpack_require__(20);\n\n// CONCATENATED MODULE: ./src/components/GridEntry.js\nconst GridEntry=props=>{let puppy=props.puppy;let backgroundStyle={backgroundImage:\"url(\"+puppy.image+\")\",backgroundSize:'cover',position:'relative'};let labelStyle={backgroundColor:\"white\",padding:\"3px\",position:\"absolute\",top:\"10px\",left:\"10px\",borderRadius:\"2px\"};return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"grid-entry\",style:backgroundStyle,children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{style:labelStyle,children:[puppy.firstName,\" \",puppy.lastName]})});};/* harmony default export */ var components_GridEntry = (GridEntry);\n// CONCATENATED MODULE: ./src/components/PuppyGrid.js\nconst PuppyGrid=props=>{let puppies=props.puppies;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"grid\",children:puppies.map(puppy=>/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_GridEntry,{puppy:puppy}))});};/* harmony default export */ var components_PuppyGrid = (PuppyGrid);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(3);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// CONCATENATED MODULE: ./src/api.js\nconst apiGetAllDogBreeds=()=>{return axios_default.a.get(\"https://dog.ceo/api/breeds/list/all\");};// hound, basset\nconst apiGetRandomImage=(breed,subBreed)=>{let innerPart=breed;if(!!subBreed)innerPart+=\"/\"+subBreed;let url=\"https://dog.ceo/api/breed/\"+innerPart+\"/images/random\";return axios_default.a.get(url);};\n// CONCATENATED MODULE: ./src/App.js\n/*\nUsing React, create the basic page that lists and filters dog breeds. This is the docs for the API you will interface\nwith: https://dog.ceo/dog-api/documentation/. You will use the API to fetch a list of dog breeds which will be the basis of\nyour app. By default, your page should have a tiled view of all dog breeds returned from that API with the name of the breed\noverlaying the image of the breed.\nThere should be a way to filter the dog breed names based on an input on the page. When a user is typing, the tiles should\nautomatically show/not show based on the filter input changing. Your page should be responsive. You can choose whether to\ninclude sub-breeds into your app or not.\n\n\nTODO: \n- Filter input \n- Grid\n\n*/function App(){let _useState=Object(react[\"useState\"])([]),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),puppies=_useState2[0],setPuppies=_useState2[1];/*\n  GET DOG PLAN: \n  first get all dog breeds \n  https://dog.ceo/api/breeds/list/all\n  message.entries into 2D\n  */Object(react[\"useEffect\"])(()=>{apiGetAllDogBreeds().then(rsp=>{let pushPuppies=[];let length=Object.entries(rsp.data.message).length;// Use Object.entries to extrapolate this JSON object out into a 2D array of strings.\nObject.entries(rsp.data.message).forEach((entry,index)=>{// Two kinds of dogs in this list: dogs with one name, and dogs with two names\n// Dogs with one name:\nif(entry[1].length===0){apiGetRandomImage(entry[0]).then(imageRsp=>{pushPuppies.push({firstName:\"\",lastName:entry[0],image:imageRsp.data.message});if(index===length-1){// We've reached the end and gotten all of our images.\n// Time to update the state and thus the DOM.\nsetPuppies(pushPuppies);}});}// Dogs with two names:\nif(entry[1].length>0){entry[1].forEach((subPup,subIndex)=>{apiGetRandomImage(entry[0],subPup).then(imageRsp=>{pushPuppies.push({firstName:subPup,lastName:entry[0],image:imageRsp.data.message});if(index===length-1&&subIndex===entry[1].length-1){// If our last entry happens to have children, we make sure we reach the\n// end of those children.\nsetPuppies(pushPuppies);}});});}});});},[]);return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"main\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"header\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h1\",{children:\"It's Puppy Time\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_PuppyGrid,{puppies:puppies})]})});}\n// CONCATENATED MODULE: ./src/index.js\nconst rootElement=document.getElementById(\"root\");react_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react[\"StrictMode\"],{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App,{})}),rootElement);\n\n/***/ })\n\n},[[39,1,2]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\spark\\repos\\react-dog-breeds\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-4-0!C:\\Users\\spark\\repos\\react-dog-breeds\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-4-1!C:\\Users\\spark\\repos\\react-dog-breeds\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\spark\\repos\\react-dog-breeds\\src\\styles.css","C:/Users/spark/repos/react-dog-breeds/src/components/GridEntry.js","C:/Users/spark/repos/react-dog-breeds/src/components/PuppyGrid.js","C:/Users/spark/repos/react-dog-breeds/src/api.js","C:/Users/spark/repos/react-dog-breeds/src/App.js","C:/Users/spark/repos/react-dog-breeds/src/index.js"],"names":["GridEntry","props","puppy","backgroundStyle","backgroundImage","image","backgroundSize","position","labelStyle","backgroundColor","padding","top","left","borderRadius","firstName","lastName","PuppyGrid","puppies","map","apiGetAllDogBreeds","axios","get","apiGetRandomImage","breed","subBreed","innerPart","url","App","useState","setPuppies","useEffect","then","rsp","pushPuppies","length","Object","entries","data","message","forEach","entry","index","imageRsp","push","subPup","subIndex","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","const GridEntry = (props) => {\r\n  let { puppy } = props;\r\n  let backgroundStyle = { backgroundImage: \"url(\" + puppy.image + \")\", backgroundSize: 'cover', position: 'relative' };\r\n  let labelStyle = {\r\n    backgroundColor: \"white\", \r\n    padding: \"3px\", \r\n    position: \"absolute\", \r\n    top: \"10px\", \r\n    left: \"10px\",\r\n    borderRadius: \"2px\"\r\n  } \r\n  return (\r\n    <div className=\"grid-entry\" style={backgroundStyle}>\r\n      <span style={labelStyle}>{puppy.firstName} {puppy.lastName}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridEntry;\r\n","import GridEntry from \"./GridEntry\";\r\n\r\nconst PuppyGrid = (props) => {\r\n  let { puppies } = props;\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {puppies.map((puppy) => (\r\n        <GridEntry puppy={puppy} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PuppyGrid;\r\n","import axios from \"axios\";\r\n\r\nexport const apiGetAllDogBreeds = () => {\r\n  return axios.get(\"https://dog.ceo/api/breeds/list/all\");\r\n};\r\n\r\n// hound, basset\r\nexport const apiGetRandomImage = (breed, subBreed) => {\r\n  let innerPart = breed;\r\n  if (!!subBreed) innerPart += \"/\" + subBreed;\r\n  let url = \"https://dog.ceo/api/breed/\" + innerPart + \"/images/random\";\r\n  return axios.get(url);\r\n};\r\n","import \"./styles.css\";\nimport * as React from \"react\";\nimport PuppyGrid from \"./components/PuppyGrid\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { apiGetAllDogBreeds, apiGetRandomImage } from \"./api\";\n/*\nUsing React, create the basic page that lists and filters dog breeds. This is the docs for the API you will interface\nwith: https://dog.ceo/dog-api/documentation/. You will use the API to fetch a list of dog breeds which will be the basis of\nyour app. By default, your page should have a tiled view of all dog breeds returned from that API with the name of the breed\noverlaying the image of the breed.\nThere should be a way to filter the dog breed names based on an input on the page. When a user is typing, the tiles should\nautomatically show/not show based on the filter input changing. Your page should be responsive. You can choose whether to\ninclude sub-breeds into your app or not.\n\n\nTODO: \n- Filter input \n- Grid\n\n*/\n\nexport default function App() {\n  let [puppies, setPuppies] = useState([]);\n\n  /*\n  GET DOG PLAN: \n  first get all dog breeds \n  https://dog.ceo/api/breeds/list/all\n  message.entries into 2D\n  */\n\n  useEffect(() => {\n    apiGetAllDogBreeds().then((rsp) => {\n      let pushPuppies = [];\n      let length = Object.entries(rsp.data.message).length;\n      // Use Object.entries to extrapolate this JSON object out into a 2D array of strings.\n      Object.entries(rsp.data.message).forEach((entry, index) => {\n        // Two kinds of dogs in this list: dogs with one name, and dogs with two names\n\n        // Dogs with one name:\n        if (entry[1].length === 0) {\n          apiGetRandomImage(entry[0]).then((imageRsp) => {\n            pushPuppies.push({\n              firstName: \"\",\n              lastName: entry[0],\n              image: imageRsp.data.message\n            });\n            if (index === length - 1) {\n              // We've reached the end and gotten all of our images.\n              // Time to update the state and thus the DOM.\n              setPuppies(pushPuppies);\n            }\n          });\n        }\n\n        // Dogs with two names:\n        if (entry[1].length > 0) {\n          entry[1].forEach((subPup, subIndex) => {\n            apiGetRandomImage(entry[0], subPup).then((imageRsp) => {\n              pushPuppies.push({\n                firstName: subPup,\n                lastName: entry[0],\n                image: imageRsp.data.message\n              });\n              if (index === length - 1 && subIndex === entry[1].length - 1) {\n                // If our last entry happens to have children, we make sure we reach the\n                // end of those children.\n                setPuppies(pushPuppies);\n              }\n            });\n          });\n        }\n      });\n    });\n  }, []);\n\n  return (\n    <main>\n      <header>\n        <h1>It's Puppy Time</h1>\n        <PuppyGrid puppies={puppies} />\n      </header>\n    </main>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"]}}