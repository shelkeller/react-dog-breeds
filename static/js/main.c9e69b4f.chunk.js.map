{"version":3,"sources":["components/GridEntry.js","components/PuppyGrid.js","api.js","App.js","index.js"],"names":["GridEntry","props","puppy","backgroundStyle","backgroundImage","image","backgroundSize","position","filtered","className","style","padding","bottom","left","borderRadius","firstName","lastName","PuppyGrid","puppies","map","apiGetRandomImage","breed","subBreed","innerPart","url","axios","get","App","useState","setPuppies","filter","setFilter","useEffect","then","rsp","pushPuppies","length","Object","entries","data","message","forEach","entry","index","imageRsp","push","subPup","subIndex","top","fontSize","float","onChange","e","target","value","newPuppies","includes","type","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMA4BeA,MA5BIC,IAAW,IACtBC,EAAUD,EAAVC,MACFC,EAAkB,CACpBC,gBAAiB,OAASF,EAAMG,MAAQ,IACxCC,eAAgB,QAChBC,SAAU,YAUZ,OACE,oCAECL,EAAMM,UACH,qBAAKC,UAAU,aAAaC,MAAOP,EAAnC,SACA,uBAAMM,UAAU,cAAcC,MAZnB,CACfC,QAAS,MACTJ,SAAU,WACVK,OAAQ,MACRC,KAAM,MACNC,aAAc,QAOV,UAAkDZ,EAAMa,UAAxD,IAAoEb,EAAMc,iBCNnEC,MAZIhB,IAAW,IACtBiB,EAAYjB,EAAZiB,QAEN,OACE,qBAAKT,UAAU,OAAf,SACGS,EAAQC,KAAKjB,GACZ,cAAC,EAAD,CAAWA,MAAOA,S,wBCNnB,MAKMkB,EAAoB,CAACC,EAAOC,KACvC,IAAIC,EAAYF,EACVC,IAAUC,GAAa,IAAMD,GACnC,IAAIE,EAAM,6BAA+BD,EAAY,iBACrD,OAAOE,IAAMC,IAAIF,ICGJ,SAASG,IAAO,IAAD,EACAC,mBAAS,IADT,mBACvBV,EADuB,KACdW,EADc,OAEFD,mBAAS,IAFP,mBAEvBE,EAFuB,KAEfC,EAFe,KAI5BC,qBAAU,KDfHP,IAAMC,IAAI,uCCgBMO,MAAMC,IACzB,IAAIC,EAAc,GACdC,EAASC,OAAOC,QAAQJ,EAAIK,KAAKC,SAASJ,OAE9CC,OAAOC,QAAQJ,EAAIK,KAAKC,SAASC,SAAQ,CAACC,EAAOC,KAIvB,IAApBD,EAAM,GAAGN,QACXhB,EAAkBsB,EAAM,IAAIT,MAAMW,IAChCT,EAAYU,KAAK,CACf9B,UAAW,GACXC,SAAU0B,EAAM,GAChBrC,MAAOuC,EAASL,KAAKC,UAEnBG,IAAUP,EAAS,GAGrBP,EAAWM,MAKbO,EAAM,GAAGN,OAAS,GACpBM,EAAM,GAAGD,SAAQ,CAACK,EAAQC,KACxB3B,EAAkBsB,EAAM,GAAII,GAAQb,MAAMW,IACxCT,EAAYU,KAAK,CACf9B,UAAW+B,EACX9B,SAAU0B,EAAM,GAChBrC,MAAOuC,EAASL,KAAKC,UAEnBG,IAAUP,EAAS,GAAKW,IAAaL,EAAM,GAAGN,OAAS,GAGzDP,EAAWM,iBAOtB,IAYH,OACE,+BACE,mCACE,iDAEE,cAAC,IAAD,CAAYzB,MAAO,CAACH,SAAU,WAAYyC,IAAI,SAC9C,sBAAMtC,MAAO,CAACuC,SAAU,OAAQC,MAAO,QAAS3C,SAAU,WAAYyC,IAAK,QAA3E,mCACA,uBACEG,SAlBWC,IACpBrB,EAAUqB,EAAEC,OAAOC,OACnB,IAAIC,EAAarC,EAAQC,KAAIjB,IAC1BA,EAAMM,UAAYN,EAAMa,UAAUyC,SAASJ,EAAEC,OAAOC,SAAWpD,EAAMc,SAASwC,SAASJ,EAAEC,OAAOC,OACzFpD,KAEV2B,EAAW0B,IAaFE,KAAK,OACLH,MAAOxB,OAGX,cAAC,EAAD,CAAWZ,QAASA,SChF5B,MAAMwC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACnC,EAAD,MAEF+B,K","file":"static/js/main.c9e69b4f.chunk.js","sourcesContent":["const GridEntry = (props) => {\r\n  let { puppy } = props;\r\n  let backgroundStyle = { \r\n    backgroundImage: \"url(\" + puppy.image + \")\", \r\n    backgroundSize: 'cover', \r\n    position: 'relative'\r\n   };\r\n  \r\n  let labelStyle = {\r\n    padding: \"5px\", \r\n    position: \"absolute\", \r\n    bottom: \"5px\", \r\n    left: \"5px\",\r\n    borderRadius: \"10px\"\r\n  } \r\n  return (\r\n    <>\r\n    { \r\n    !puppy.filtered && \r\n        <div className=\"grid-entry\" style={backgroundStyle}>\r\n        <span className=\"entry-label\" style={labelStyle}>{puppy.firstName} {puppy.lastName}</span>\r\n        </div>\r\n    }\r\n  </>\r\n    \r\n  );\r\n};\r\n\r\nexport default GridEntry;\r\n","import GridEntry from \"./GridEntry\";\r\n\r\nconst PuppyGrid = (props) => {\r\n  let { puppies } = props;\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {puppies.map((puppy) => (\r\n        <GridEntry puppy={puppy} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PuppyGrid;\r\n","import axios from \"axios\";\r\n\r\nexport const apiGetAllDogBreeds = () => {\r\n  return axios.get(\"https://dog.ceo/api/breeds/list/all\");\r\n};\r\n\r\n// hound, basset\r\nexport const apiGetRandomImage = (breed, subBreed) => {\r\n  let innerPart = breed;\r\n  if (!!subBreed) innerPart += \"/\" + subBreed;\r\n  let url = \"https://dog.ceo/api/breed/\" + innerPart + \"/images/random\";\r\n  return axios.get(url);\r\n};\r\n","import \"./styles.css\";\nimport * as React from \"react\";\nimport PuppyGrid from \"./components/PuppyGrid\";\nimport {IoPawSharp} from \"react-icons/io5\"\nimport { useEffect, useState } from \"react\";\nimport { apiGetAllDogBreeds, apiGetRandomImage } from \"./api\";\n\n/*\nTODO: \nclean up tree search algorithm \nmove all styles to css \nget rid of puppygrid component\n\n*/\nexport default function App() {\n  let [puppies, setPuppies] = useState([]);\n  let [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    apiGetAllDogBreeds().then((rsp) => {\n      let pushPuppies = [];\n      let length = Object.entries(rsp.data.message).length;\n      // Use Object.entries to extrapolate this JSON object out into a 2D array of strings.\n      Object.entries(rsp.data.message).forEach((entry, index) => {\n        // Two kinds of dogs in this list: dogs with one name, and dogs with two names\n\n        // Dogs with one name:\n        if (entry[1].length === 0) {\n          apiGetRandomImage(entry[0]).then((imageRsp) => {\n            pushPuppies.push({\n              firstName: \"\",\n              lastName: entry[0],\n              image: imageRsp.data.message\n            });\n            if (index === length - 1) {\n              // We've reached the end and gotten all of our images.\n              // Time to update the state and thus the DOM.\n              setPuppies(pushPuppies);\n            }\n          });\n        }\n        // Dogs with two names:\n        if (entry[1].length > 0) {\n          entry[1].forEach((subPup, subIndex) => {\n            apiGetRandomImage(entry[0], subPup).then((imageRsp) => {\n              pushPuppies.push({\n                firstName: subPup,\n                lastName: entry[0],\n                image: imageRsp.data.message\n              });\n              if (index === length - 1 && subIndex === entry[1].length - 1) {\n                // If our last entry happens to have children, we make sure we reach the\n                // end of those children.\n                setPuppies(pushPuppies);\n              }\n            });\n          });\n        }\n      });\n    });\n  }, []);\n\n  const handleChange = e => {\n   setFilter(e.target.value);\n   let newPuppies = puppies.map(puppy => {\n      puppy.filtered = !puppy.firstName.includes(e.target.value) && !puppy.lastName.includes(e.target.value);\n      return puppy;\n   });\n   setPuppies(newPuppies);\n\n  }\n\n  return (\n    <main>\n      <header>\n        <h1>\n          It's Puppy Time \n          <IoPawSharp style={{position: \"relative\", top:\"5px\"}} />\n          <span style={{fontSize: '12px', float: \"right\", position: \"relative\", top: \"15px\"}}>All dogs are puppies.</span>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            value={filter} \n          /> \n        </h1>\n        <PuppyGrid puppies={puppies} />\n      </header>\n    </main>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}