{"version":3,"sources":["webpack://src/styles.css"],"names":[],"mappings":"AACA,KACE,wBAA+B,CAC/B,kCAEF,CAEA,GACE,qBAAuB,CACvB,YAAa,CACb,kBACF,CAEA,iBACE,cAAe,CACb,eAAgB,CAChB,iBAAkB,CAClB,WAAY,CACZ,SACJ,CAQA,MACE,YAAa,CACb,yDAA4D,CAC5D,kBACF,CAEA,aACE,UAAW,CACX,OAAQ,CACR,mBAGF,CAEA,gCAJE,YAAe,CACf,eAMF,CAEA,YACE,wBAA2B,CAC3B,WAAY,CACZ,WAAa,CACb,iBACF","file":"main.146b7fd6.chunk.css","sourcesContent":["\nbody {\n  background-color: lightseagreen;\n  font-family: 'Quicksand', sans-serif;\n\n}\n\nh1 {\n  background-color: white;\n  padding: .5em;\n  border-radius: 15px;\n}\n\ninput[type=\"text\"] {\n  font-size: 20px;\n    margin-left: 10%;\n    margin-bottom: 5px;\n    height: 30px;\n    width: 40%;\n}\n/* \nI was worried about time, so I went with sort of a hacky solution I found by googling\naround instead of what would have normally done, which is work this out using\nflexbox. \nHere's the credit for the grid css: \nhttps://medium.com/cloudaper/how-to-create-a-flexible-square-grid-with-css-grid-layout-ea48baf038f3\n */\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(11rem, 1fr));\n  grid-auto-rows: 1fr;\n}\n\n.grid::before {\n  content: \"\";\n  width: 0;\n  padding-bottom: 100%;\n  grid-row: 1 / 1;\n  grid-column: 1 / 1;\n}\n\n.grid > *:first-child {\n  grid-row: 1 / 1;\n  grid-column: 1 / 1;\n}\n\n.grid-entry {\n  background-color: lightgrey;\n  padding: 1px;\n  margin: 0.5em;\n  border-radius: 5px;\n}\n"]}